<template>
	<view>
		<view class="uni-list">
			<block v-for="(value, index) in listData" :key="index">
				<view class="uni-list-cell" hover-class="uni-list-cell-hover">
					<view class="uni-media-list">
						<view class="uni-media-list-body">
							<view class="uni-media-list-text-top">
								<text>流程定义名称：{{ value.processDefinitionName }}</text>
							</view>
							<view class="uni-media-list-text-top">
								<text>流程实例名称：{{ value.processInstanceName }}</text>
							</view>
							<view class="uni-media-list-text-top">
								<text>当前任务：{{ value.name }}</text>
							</view>
							<view class="uni-media-list-text-top">
								<text>请假开始时间：{{ value.startTime }}</text>
							</view>
							<view class="uni-media-list-text-top">
								<text>请假结束时间：{{ value.endTime }}</text>
							</view>
							<view class="uni-media-list-text-top">
								<text>请假备注：{{ value.description }}</text>
							</view>
							<view class="uni-media-list-text-bottom">
								<button class="mini-btn" type="primary" size="mini" @click="suspend()">详情</button>
								<button class="mini-btn" type="primary" size="mini" @click="suspend()">终止</button>
								<button class="mini-btn" type="primary" size="mini" @click="suspend()">驳回</button>
								<button class="mini-btn" type="primary" size="mini" @click="suspend()">回退</button>
								<button class="mini-btn" type="primary" size="mini" @click="suspend()">委派</button>
								<button class="mini-btn" type="primary" size="mini" @click="suspend()">通过</button>
								<button class="mini-btn" type="primary" size="mini" @click="suspend()">跟踪</button>
							</view>
						</view>
					</view>
				</view>
			</block>
		</view>
		<uni-load-more :status="status" :icon-size="16" :content-text="contentText" />
	</view>
</template>

<script>
	import uniLoadMore from '@/components/uni-load-more/uni-load-more.vue';
	var dateUtils = require('../../common/util.js');

	export default {
		components: {
			uniLoadMore
		},
		data() {
			return {
				listData: [],
				last_id: '',
				reload: false,
				status: 'more',
				adpid: '',
				contentText: {
					contentdown: '上拉加载更多',
					contentrefresh: '加载中',
					contentnomore: '没有更多'
				}
			};
		},
		onLoad() {
			this.adpid = this.$adpid;
			this.getList();
		},
		onPullDownRefresh() {
			this.reload = true;
			this.last_id = '';
			this.getList();
		},
		onReachBottom() {
			this.status = 'more';
			// this.getList();
		},
		methods: {
			getList() {
				var data = {
					column: 'id,processDefinitionName,processInstanceName,name,startTime,endTime,description' //需要的字段名
				};
				if (this.last_id) {
					//说明已有数据，目前处于上拉加载
					this.status = 'loading';
					data.minId = this.last_id;
					data.time = new Date().getTime() + '';
					data.pageSize = 10;
				}
				uni.request({
					url: '/api/activiti/task/queryPersonalTask',
					data: {
						taskStatus: 'assignee'
					},
					header: {
						'Authorization': 'Bearer ' + uni.getStorageSync('uniIdToken')
					},
					success: data => {
						if (data.data.status == 200) {
							let list = this.setTime(data.data.data.list);
							this.listData = this.reload ? list : this.listData.concat(list);
							this.last_id = list[list.length - 1].id;
							this.reload = false;
						}
					},
					fail: (data, code) => {
						console.log('fail' + JSON.stringify(data));
					}
				});
			},
			setTime: function(items) {
				var newItems = [];
				items.forEach(e => {
					newItems.push({
						id: e.id,
						processDefinitionName: e.processDefinitionName,
						processInstanceName: e.processInstanceName,
						name: e.name,
						startTime: dateUtils.dateFormat(e.taskLocalVariables.startTime),
						endTime: e.taskLocalVariables.endTime ? dateUtils.dateFormat(e.taskLocalVariables.endTime) : '-',
						description: e.taskLocalVariables.description
					});
				});
				return newItems;
			},
			suspend() {
				uni.showToast({
					icon: 'none',
					title: '演示模式，暂不支持此操作。'
				});
			}
		}
	};
</script>

<style>
	.uni-media-list-logo {
		width: 180rpx;
		height: 100%;
	}

	.uni-media-list-body {
		height: auto;
		justify-content: space-around;
	}

	.uni-media-list-text-top {
		font-size: 14px;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
	}

	.mini-btn {
		margin-right: 10px;
		float: right;
	}
</style>
