<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdf.auth.mapper.SysUserRoleMapper">

    <!-- 通用查询映射结果ss -->
    <resultMap id="BaseResultMap" type="com.zdf.auth.model.po.SysUserRole">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="role_id" property="roleId" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
            id, user_id, role_id, is_deleted, create_by, create_time, update_by, update_time
    </sql>

    <!-- 表名 -->
    <sql id="tname">sys_user_role </sql>

    <sql id="selects">
        SELECT <include refid="Base_Column_List"/>
        FROM <include refid="tname"/>
        <where>
            is_deleted = 0
            <if test="sysUserRole.userId != null ">
                AND user_id = ${sysUserRole.userId}
            </if>

            <if test="sysUserRole.roleId != null ">
                AND role_id = ${sysUserRole.roleId}
            </if>

        </where>
    </sql>

    <select id="pageList" resultMap="BaseResultMap" parameterType="com.zdf.auth.model.po.SysUserRole">
        <include refid="selects"/>
    </select>

    <select id="list" resultMap="BaseResultMap" parameterType="com.zdf.auth.model.po.SysUserRole">
        <include refid="selects"/>
    </select>




    <delete id="phyDelById">
        DELETE FROM  sys_user_role WHERE id = ${id}
    </delete>

    <update id="logicDel">
        UPDATE sys_user_role SET is_deleted = 1 ,update_by = #{username}, update_time = now()
        WHERE id = ${id} AND is_deleted = 0
    </update>

    <update id="updateSysUserRoleMultiRow" parameterType="com.zdf.auth.model.po.SysUserRole">
        update sys_user_role
        set is_deleted=1
        where is_deleted = 0
        and user_id = #{sysUserRole.userId}
    </update>

    <select id="getCountByUserNameAndRoleName" resultType="int">
        select count(*) from sys_user_role s
        left join sys_role sr on sr.id = s.role_id and sr.is_deleted = 0
        left join sys_user su on s.user_id = su.id and su.is_deleted = 0
        where s.is_deleted = 0
        and su.name = #{username} and sr.role_code = #{admin} and su.code = #{tenantCode}
    </select>

    <select id="getCountByUserName" resultType="int">
        select count(*) from sys_user_role s
        left join sys_role sr on sr.id = s.role_id and sr.is_deleted = 0
        left join sys_user su on s.user_id = su.id and su.is_deleted = 0
        left join sys_role_menu srm on srm.role_id = sr.id and srm.is_deleted = 0
        left join sys_menu sm on sm.id = srm.menu_id and sm.is_deleted = 0
        where s.is_deleted = 0
        and su.name = #{username} and sm.code = #{menuCode} and su.code = #{userTenantCode}
    </select>

    <select id="getCountByUserNameAndStep" resultType="int">
        select count(*) from sys_user_role s
        left join sys_role sr on sr.id = s.role_id and sr.is_deleted = 0
        left join sys_user su on s.user_id = su.id and su.is_deleted = 0
        left join sys_role_menu srm on srm.role_id = sr.id and srm.is_deleted = 0
        left join sys_menu sm on sm.id = srm.menu_id and sm.is_deleted = 0
        left join sys_role_action_check srac on sm.id = srac.action_id and sr.id = srac.role_id and srac.is_deleted = 0
        where s.is_deleted = 0
        and su.name = #{username} and sm.code = #{menuCode} and su.code = #{userTenantCode} and srac.check_level = #{newStep}
    </select>

    <select id="getEnabledRolesByUserId" resultType="com.zdf.auth.model.po.SysRole">
        select sr.* from sys_user_role as relations
         left join sys_role sr on sr.id=relations.role_id and sr.is_deleted=0
         where relations.user_id = #{id} and sr.id is not null
    </select>

    <update id="logicDelByIds">
        UPDATE sys_user_role SET is_deleted = 1 ,update_by = #{username}, update_time = now()
        WHERE is_deleted = 0
        AND id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>
