<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdf.auth.mapper.SysRoleMapper">

    <!-- 通用查询映射结果ss -->
    <resultMap id="BaseResultMap" type="com.zdf.auth.model.po.SysRole">
        <id column="id" property="id" />
        <result column="role_name" property="roleName" />
        <result column="role_code" property="roleCode" />
        <result column="status" property="status" />
        <result column="code" property="code" />
        <result column="remark" property="remark" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询映射结果ss -->
    <resultMap id="BaseResultMapOne" type="com.zdf.auth.model.vo.SysRoleVO">
        <id column="id" property="id" />
        <result column="role_name" property="roleName" />
        <result column="role_code" property="roleCode" />
        <result column="status" property="status" />
        <result column="code" property="code" />
        <result column="remark" property="remark" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
            id, role_name, role_code, status, code, remark, is_deleted, create_by, create_time, update_by, update_time
    </sql>

    <!-- 表名 -->
    <sql id="tname">sys_role </sql>

    <sql id="selects">
        SELECT <include refid="Base_Column_List"/>
        FROM <include refid="tname"/>
        <where>
            is_deleted = 0
            <if test="sysRole.roleName != null and sysRole.roleName != ''">
                AND role_name like concat('%',#{sysRole.roleName},'%')
            </if>

            <if test="sysRole.roleCode != null and sysRole.roleCode != ''">
                AND role_code like concat('%',#{sysRole.roleCode},'%')
            </if>

            <if test="sysRole.status != null ">
                AND status = ${sysRole.status}
            </if>

            <if test="sysRole.code != null and sysRole.code != ''">
                AND code = #{sysRole.code}
            </if>

            <if test="sysRole.remark != null and sysRole.remark != ''">
                AND remark = #{sysRole.remark}
            </if>

        </where>
    </sql>

    <select id="pageList" resultMap="BaseResultMapOne" parameterType="com.zdf.auth.model.po.SysRole">
        <include refid="selects"/>
    </select>

    <select id="list" resultMap="BaseResultMap" parameterType="com.zdf.auth.model.po.SysRole">
        <include refid="selects"/>
    </select>

    <select id="selectSysRoleByUserId" resultType="com.zdf.auth.model.po.SysRole">
        select sr.* from  sys_role sr
        join sys_user_role sur on sr.id = sur.role_id and sur.is_deleted = 0
        join sys_user su on sur.user_id = su.id and sr.code = su.code and su.is_deleted = 0
        where 1=1
        and sr.is_deleted = 0
        and su.id = #{userId}
    </select>
    <select id="selectRoleByUsername" resultType="com.zdf.auth.model.po.SysRole">
        SELECT
            sr.id id,
            sr.role_code roleCode,
            sr.role_name roleName,
            sr.`status` `status`,
            sr.remark remark,
            sr.code code
        FROM
            sys_role sr
                LEFT JOIN sys_user_role sur ON sur.role_id = sr.id
                AND sur.is_deleted = 0
                LEFT JOIN sys_user su ON sur.user_id = su.id
                AND su.is_deleted = 0
        WHERE
            sr.is_deleted = 0
          AND su.`name` = #{username}

    </select>

    <delete id="phyDelById">
        DELETE FROM  sys_role WHERE id = ${id}
    </delete>

    <update id="logicDel">
        UPDATE sys_role SET is_deleted = 1 ,update_by = #{username}, update_time = now()
        WHERE id = ${id} AND is_deleted = 0
    </update>


</mapper>
